"""Initial migration

Revision ID: c8bea343c785
Revises: 
Create Date: 2024-12-23 06:20:00.950505

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c8bea343c785'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('questions', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('questions', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('questions', 'question_text',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    
    # First convert options to text, then to json
    op.execute('ALTER TABLE questions ALTER COLUMN options TYPE TEXT')
    op.execute('ALTER TABLE questions ALTER COLUMN options TYPE JSON USING options::json')
    
    op.add_column('quizzes', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('quizzes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('recordings', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('recordings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('users', sa.Column('full_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'full_name')
    op.alter_column('recordings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('recordings', 'updated_at')
    op.alter_column('quizzes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('quizzes', 'updated_at')
    op.alter_column('questions', 'options',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('questions', 'question_text',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('questions', 'updated_at')
    op.drop_column('questions', 'created_at')
    # ### end Alembic commands ###
